[
    {
        "id": "cea97352281bf086",
        "type": "tab",
        "label": "Flow 19",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2d9b48618be6fe86",
        "type": "debug",
        "z": "cea97352281bf086",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 340,
        "wires": []
    },
    {
        "id": "52f7c8cdfe3cc02b",
        "type": "function",
        "z": "cea97352281bf086",
        "name": "function 10",
        "func": "var data = msg.payload;\n\n// Regular expressions to extract temperature, GSR, and ECG values\nvar tempMatch = data.match(/Temperature = (\\d+\\.\\d+) \\*F/);\nvar gsrMatch = data.match(/GSR Value = (\\d+)/);\nvar ecgMatch = data.match(/ECG Value = (\\d+)/);\n\n// Initialize payload object if not already created\nmsg.payload = {};\n\n// If temperature match is found, add it to msg.payload\nif (tempMatch) {\n    msg.payload.temperature = parseFloat(tempMatch[1]);\n}\n\n// If GSR match is found, add it to msg.payload\nif (gsrMatch) {\n    msg.payload.gsr = parseInt(gsrMatch[1], 10);\n}\n\n// If ECG match is found, add it to msg.payload\nif (ecgMatch) {\n    msg.payload.ecg = parseInt(ecgMatch[1], 10);\n}\n\n// Return the parsed data\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 200,
        "wires": [
            [
                "7d1f09ca76c0f9fd",
                "eec513417e8f2950",
                "9695c0ac8c9c9a23",
                "6965d0de4b359482",
                "6186d97f426e17b5",
                "0141992580cd7108"
            ]
        ]
    },
    {
        "id": "101f7f50fe925c61",
        "type": "mqtt in",
        "z": "cea97352281bf086",
        "name": "",
        "topic": "sensor/data",
        "qos": "2",
        "datatype": "utf8",
        "broker": "893b981ab693233e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 260,
        "wires": [
            [
                "52f7c8cdfe3cc02b",
                "2d9b48618be6fe86"
            ]
        ]
    },
    {
        "id": "7d1f09ca76c0f9fd",
        "type": "ui_text",
        "z": "cea97352281bf086",
        "group": "3237e0e0dfaa54db",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Current GSR Value",
        "format": "{{msg.payload.gsr}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "Times New Roman,Times,serif",
        "fontSize": "20",
        "color": "#06f95b",
        "x": 710,
        "y": 100,
        "wires": []
    },
    {
        "id": "eec513417e8f2950",
        "type": "ui_gauge",
        "z": "cea97352281bf086",
        "name": "",
        "group": "3237e0e0dfaa54db",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{msg.payload.gsr}}",
        "min": 0,
        "max": "1024",
        "colors": [
            "#b30000",
            "#e6e600",
            "#59cb3a"
        ],
        "seg1": "300",
        "seg2": "500",
        "diff": false,
        "className": "",
        "x": 870,
        "y": 100,
        "wires": []
    },
    {
        "id": "513ff951dbd55d49",
        "type": "mqtt in",
        "z": "cea97352281bf086",
        "name": "",
        "topic": "sensor/status",
        "qos": "2",
        "datatype": "utf8",
        "broker": "893b981ab693233e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 420,
        "wires": [
            [
                "1bd35de4e02db666",
                "02b41bda645f7cae"
            ]
        ]
    },
    {
        "id": "1bd35de4e02db666",
        "type": "ui_toast",
        "z": "cea97352281bf086",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 590,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "02b41bda645f7cae",
        "type": "debug",
        "z": "cea97352281bf086",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 500,
        "wires": []
    },
    {
        "id": "9695c0ac8c9c9a23",
        "type": "ui_text",
        "z": "cea97352281bf086",
        "group": "0672370f93522776",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "ECG Wave",
        "format": "{{msg.payload.ecg}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "Times New Roman,Times,serif",
        "fontSize": "20",
        "color": "#d2e00b",
        "x": 750,
        "y": 200,
        "wires": []
    },
    {
        "id": "df9e2d1d1fa383a5",
        "type": "ui_chart",
        "z": "cea97352281bf086",
        "name": "",
        "group": "0672370f93522776",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "1023",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#2078b6",
            "#aec7e8",
            "#e6730f",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 870,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "6965d0de4b359482",
        "type": "ui_text",
        "z": "cea97352281bf086",
        "group": "8898c7e49fceac90",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperature Level",
        "format": "{{msg.payload.temperature}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "Times New Roman,Times,serif",
        "fontSize": "20",
        "color": "#f9061f",
        "x": 570,
        "y": 40,
        "wires": []
    },
    {
        "id": "6186d97f426e17b5",
        "type": "ui_gauge",
        "z": "cea97352281bf086",
        "name": "",
        "group": "8898c7e49fceac90",
        "order": 3,
        "width": "0",
        "height": "0",
        "gtype": "wave",
        "title": "",
        "label": "*F",
        "format": "{{msg.payload.temperature}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#b30000",
            "#e6e600",
            "#59cb3a"
        ],
        "seg1": "30",
        "seg2": "70",
        "diff": false,
        "className": "",
        "x": 730,
        "y": 40,
        "wires": []
    },
    {
        "id": "0141992580cd7108",
        "type": "function",
        "z": "cea97352281bf086",
        "name": "function 11",
        "func": "// Check if the ECG value exists in the payload\nif (msg.payload && msg.payload.ecg !== undefined) {\n    // Set msg.payload to the ECG value only\n    msg.payload = msg.payload.ecg;\n    return msg;\n} else {\n    // Drop the message if no ECG value is found\n    return null;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 260,
        "wires": [
            [
                "df9e2d1d1fa383a5"
            ]
        ]
    },
    {
        "id": "c8270a518f47927f",
        "type": "ui_spacer",
        "z": "cea97352281bf086",
        "name": "spacer",
        "group": "8898c7e49fceac90",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "d47d3d1c25545229",
        "type": "ui_spacer",
        "z": "cea97352281bf086",
        "name": "spacer",
        "group": "8898c7e49fceac90",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "20e8a0d5983b8888",
        "type": "ui_spacer",
        "z": "cea97352281bf086",
        "name": "spacer",
        "group": "8898c7e49fceac90",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "af3dee7fc4a72706",
        "type": "ui_spacer",
        "z": "cea97352281bf086",
        "name": "spacer",
        "group": "8898c7e49fceac90",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "da3f91a6a0f321c6",
        "type": "ui_spacer",
        "z": "cea97352281bf086",
        "name": "spacer",
        "group": "8898c7e49fceac90",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "0a019532b2205068",
        "type": "ui_spacer",
        "z": "cea97352281bf086",
        "name": "spacer",
        "group": "8898c7e49fceac90",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "3c0d75f9e290e3b3",
        "type": "ui_spacer",
        "z": "cea97352281bf086",
        "name": "spacer",
        "group": "8898c7e49fceac90",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "f1be3e56c02fb07d",
        "type": "ui_spacer",
        "z": "cea97352281bf086",
        "name": "spacer",
        "group": "8898c7e49fceac90",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "893b981ab693233e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "3237e0e0dfaa54db",
        "type": "ui_group",
        "name": "Galvanic Skin Response",
        "tab": "f0d8e44c470d0a23",
        "order": 2,
        "disp": true,
        "width": "8",
        "collapse": true,
        "className": ""
    },
    {
        "id": "0672370f93522776",
        "type": "ui_group",
        "name": "Electrocardiogram",
        "tab": "f0d8e44c470d0a23",
        "order": 3,
        "disp": true,
        "width": "10",
        "collapse": true,
        "className": ""
    },
    {
        "id": "8898c7e49fceac90",
        "type": "ui_group",
        "name": "Body Temperature ",
        "tab": "f0d8e44c470d0a23",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "f0d8e44c470d0a23",
        "type": "ui_tab",
        "name": "MediLoRa",
        "icon": "wi-wu-sunny",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]